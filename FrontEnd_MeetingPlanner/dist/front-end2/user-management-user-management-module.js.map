{"version":3,"sources":["webpack:///./src/app/user-management/forgot-password/forgot-password.component.html","webpack:///./src/app/user-management/forgot-password/forgot-password.component.scss","webpack:///./src/app/user-management/forgot-password/forgot-password.component.ts","webpack:///./src/app/user-management/login/login.component.html","webpack:///./src/app/user-management/login/login.component.scss","webpack:///./src/app/user-management/login/login.component.ts","webpack:///./src/app/user-management/password-reset/password-reset.component.html","webpack:///./src/app/user-management/password-reset/password-reset.component.scss","webpack:///./src/app/user-management/password-reset/password-reset.component.ts","webpack:///./src/app/user-management/signup/signup.component.html","webpack:///./src/app/user-management/signup/signup.component.scss","webpack:///./src/app/user-management/signup/signup.component.ts","webpack:///./src/app/user-management/user-management.component.html","webpack:///./src/app/user-management/user-management.component.scss","webpack:///./src/app/user-management/user-management.component.ts","webpack:///./src/app/user-management/user-management.module.ts"],"names":[],"mappings":"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","file":"user-management-user-management-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\"></div>\\n    <div class=\\\"col-xs-12 col-sm-10 shadow-box-card\\\">\\n      <h2>Send reset link to email</h2>\\n      <label for=\\\"inputEmail\\\">Email</label>\\n      <input type=\\\"email\\\" id=\\\"FPEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter email address\\\" required\\n        autofocus>\\n      <button class=\\\"btn btn-lg btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"forgotPassword()\\\">Send</button>\\n    </div>\\n  </div>\"","module.exports = \"input {\\n  margin-bottom: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1tYW5hZ2VtZW50L2ZvcmdvdC1wYXNzd29yZC9DOlxcVXNlcnNcXERFTExcXG5ld1xcTWVhbi1zdGFjay1hcHAxLW1lZXRpbmctcGxhbm5lci1tYXN0ZXJcXEZyb250RW5kX01lZXRpbmdQbGFubmVyL3NyY1xcYXBwXFx1c2VyLW1hbmFnZW1lbnRcXGZvcmdvdC1wYXNzd29yZFxcZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2VyLW1hbmFnZW1lbnQvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0e1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/services/app.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  public email: string;\n  constructor(\n    public appService: AppService,\n    public router: Router,\n     private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  public forgotPassword(): void{\n    if (!this.email) {\n      this.toastr.warning('email required')\n    } else {\n      let data = {\n        email: this.email\n      };\n      this.appService.forgotPassword(data)\n        .subscribe((response) => {\n          this.toastr.success('Please check your email to reset password')\n          if (response.status === 200) {\n            setTimeout(() => {\n              this.router.navigate(['']);\n            }, 1000)\n          } else {\n            this.toastr.error(response.message)\n          }\n        }, (error) => {\n          this.toastr.error('Something went wrong, please try again')\n        })\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\"></div>\\n  <div class=\\\"col-xs-12 col-sm-10 shadow-box-card\\\">\\n    <h2>Login</h2>\\n    <label>Email</label>\\n    <input type=\\\"email\\\" id=\\\"loginEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter email address\\\" required>\\n    <label>Password</label>\\n    <input type=\\\"password\\\" id=\\\"loginPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Enter password\\\"required>\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"login()\\\">Sign in</button>\\n  </div>\\n</div>\"","module.exports = \"input, button {\\n  margin-bottom: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1tYW5hZ2VtZW50L2xvZ2luL0M6XFxVc2Vyc1xcREVMTFxcbmV3XFxNZWFuLXN0YWNrLWFwcDEtbWVldGluZy1wbGFubmVyLW1hc3RlclxcRnJvbnRFbmRfTWVldGluZ1BsYW5uZXIvc3JjXFxhcHBcXHVzZXItbWFuYWdlbWVudFxcbG9naW5cXGxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2VyLW1hbmFnZW1lbnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCwgYnV0dG9ue1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../services/app.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Cookie } from 'ng2-cookies';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public email: string\n  public password: string\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  public login: any = () => {\n    if (!this.email) {\n      this.toastr.warning('email required');\n    } else if (!this.password) {\n      this.toastr.warning('password required');\n    } else {\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n      this.appService.onLogin(data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status === 200) {\n            Cookie.deleteAll();\n            let userType = apiResponse.data.userDetails.isAdmin? 'admin':'user';\n            Cookie.set('activeUserType', userType);\n            Cookie.set('activeUserId', apiResponse.data.userDetails.userId);\n            Cookie.set('activeUserEmail', apiResponse.data.userDetails.email);\n            Cookie.set('activeUserName', apiResponse.data.userDetails.userName);\n            Cookie.set('authToken', apiResponse.data.authToken);\n            Cookie.set('activeUserFullName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n            if(apiResponse.data.userDetails.isAdmin){\n              this.router.navigate(['admin/dashboard']);\n            }else{\n              this.router.navigate(['user/dashboard']);\n            }\n          } else {\n            this.toastr.error('login failed, please try again');\n          }\n        }, (err) => {\n          this.toastr.error('login failed, please try again');\n        });\n    } \n  } \n}","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\"></div>\\n  <div class=\\\"col-sm-12 col-md-6 shadow-box-card\\\">\\n    <h2>Password reset</h2>\\n    <label>Email</label>\\n    <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter email address\\\" required>\\n\\n    <label>Password</label>\\n    <input type=\\\"password\\\" id=\\\"Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Enter password\\\"\\n      required>\\n\\n    <label>Confirm Password</label>\\n    <input type=\\\"password\\\" id=\\\"confirmPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmPassword\\\"\\n      placeholder=\\\"Enter password again\\\" required>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"resetPassword()\\\">Reset Password</button>\\n  </div>\\n</div>\"","module.exports = \"input {\\n  margin-bottom: 10px; }\\n\\nbutton {\\n  margin-top: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1tYW5hZ2VtZW50L3Bhc3N3b3JkLXJlc2V0L0M6XFxVc2Vyc1xcREVMTFxcbmV3XFxNZWFuLXN0YWNrLWFwcDEtbWVldGluZy1wbGFubmVyLW1hc3RlclxcRnJvbnRFbmRfTWVldGluZ1BsYW5uZXIvc3JjXFxhcHBcXHVzZXItbWFuYWdlbWVudFxccGFzc3dvcmQtcmVzZXRcXHBhc3N3b3JkLXJlc2V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CLEVBQUE7O0FBRXZCO0VBQ0ksZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2VyLW1hbmFnZW1lbnQvcGFzc3dvcmQtcmVzZXQvcGFzc3dvcmQtcmVzZXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuYnV0dG9ue1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from 'src/app/services/app.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.scss']\n})\nexport class PasswordResetComponent implements OnInit {\n\n  public password: string\n  public confirmPassword: string\n  public email: string;\n  @Input() userId: string;\n  \n  constructor(private router: Router, \n    private appService: AppService, \n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  public resetPassword(): void {\n    if (this.password === this.confirmPassword) {\n      let data={\n        userId:this.userId,\n        password:this.password,\n        email:this.email\n      }\n      this.appService.resetPassword(data).subscribe((response) => {\n        if (response.status === 200) {\n          this.toastr.success('password changed successfully');\n          this.router.navigate(['']);\n        } else {\n          this.toastr.error(response.message);\n        }\n      }, (err) => {\n        this.toastr.error(err.message)\n      })\n    }else{\n      this.toastr.warning('password not matched with confirmed password');\n    }\n  }\n}\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<h2>Sign Up</h2>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"admin-checkbox\\\" id=\\\"userType\\\" [(ngModel)]=\\\"isAdmin\\\" name=\\\"userType\\\" (change)=\\\"setUserName()\\\">Signup as an Admin\\n\\n    <br/>\\n    <label>First Name</label>\\n    <input type=\\\"text\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"Enter first name\\\" required>\\n    \\n    <label>Last Name</label>\\n    <input type=\\\"text\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" placeholder=\\\"Enter last name\\\" required>\\n    \\n    <label>User Name</label>\\n    <input type=\\\"text\\\" id=\\\"inputUserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userName\\\" placeholder=\\\"Enter user name\\\"\\n      (focusout)=\\\"setUserName()\\\" required>\\n\\n      <label>Email</label>\\n    <input type=\\\"email\\\" id=\\\"signUpEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter email address\\\" required>\\n\\n    <label>Password</label>\\n    <input type=\\\"password\\\" id=\\\"signupPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Enter password - minimum 8 chracters length\\\" required>\\n    \\n    <label>Select Country</label>\\n    <select class=\\\"form-control\\\" id=\\\"inputCountry\\\" [(ngModel)]=\\\"selectedCountry\\\" name=\\\"country\\\"\\n      (change)=\\\"onCountryChange()\\\">\\n      <option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.code\\\">{{country.name}}</option>\\n    </select>\\n\\n    <label>Mobile</label>\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-text\\\">+{{countryCode}}</div>\\n      <input type=\\\"number\\\" pattern=\\\"^\\\\d{10}$\\\" min=\\\"10\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\" name=\\\"mobile\\\"\\n        #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"mobileNumber\\\" placeholder=\\\"Enter 10 digit mobile number\\\" required>\\n      <br>\\n      <div [hidden]=\\\"mobile.valid || mobile.pristine\\\" class=\\\"alert alert-danger col-12\\\">\\n        Mobile Number must be 10 numbers\\n      </div>\\n    </div>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signUp()\\\">Sign Up</button>\\n\\n  </div>\\n</div>\"","module.exports = \"input, select {\\n  margin-bottom: 10px; }\\n\\n.admin-checkbox {\\n  margin-right: 10px; }\\n\\n.input-group {\\n  margin-bottom: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1tYW5hZ2VtZW50L3NpZ251cC9DOlxcVXNlcnNcXERFTExcXG5ld1xcTWVhbi1zdGFjay1hcHAxLW1lZXRpbmctcGxhbm5lci1tYXN0ZXJcXEZyb250RW5kX01lZXRpbmdQbGFubmVyL3NyY1xcYXBwXFx1c2VyLW1hbmFnZW1lbnRcXHNpZ251cFxcc2lnbnVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CLEVBQUE7O0FBRXZCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2VyLW1hbmFnZW1lbnQvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0LCBzZWxlY3R7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbi5hZG1pbi1jaGVja2JveHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4uaW5wdXQtZ3JvdXB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../services/app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  public firstName: any;\n  public lastName: any;\n  public email: any;\n  public userName: any = '';\n  public password: any;\n  public selectedCountry: any;\n  public mobileNumber: any;\n  public isAdmin: boolean = false;\n  public countryName: string;\n  public countryCode: string;\n  public countryList: any[] = [];\n  public countryCodes: string[];\n  public isLoading: boolean = false;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.getCountries()\n  }\n  \n  public getCountries() {\n    // get list of countries \n    this.appService.getCountries()\n      .subscribe((responseList) => {\n        for (let item in responseList) {\n          this.countryList.push({ code: item, name: responseList[item] })\n        }\n        this.countryList = this.countryList.sort((first, second) => {\n          return first.name.toUpperCase() < second.name.toUpperCase() ? -1 : (first.name.toUpperCase() > second.name.toUpperCase() ? 1 : 0);\n        });\n        this.getCountryCodes();\n        this.selectedCountry = 'IN';\n        this.countryName = this.countryList[this.selectedCountry];\n      })\n  }\n  \n  public getCountryCodes() {\n    // get list of country codes\n    this.appService.getCountryCodes()\n      .subscribe((data) => {\n        this.countryCodes = data;\n        this.countryCode = this.countryCodes['IN'];\n      })\n  }\n\n  public onCountryChange() {\n    // called when user change the country code\n    this.countryCode = this.countryCodes[this.selectedCountry];\n    this.countryName = this.countryList[this.selectedCountry];\n  }\n\n  public setUserName(): void{\n    // if user singup as an admin then suffix the username with \"-admin\"\n    if(this.isAdmin && this.userName!==''){\n      if(!this.userName.includes('-admin')){\n        this.userName = this.userName + '-admin'\n      }\n    }else{\n      this.userName = this.userName.split('-admin')[0]\n    }\n  }\n\n  public signUp: any = () => {\n    // validate signup form and call service method for api call of signup\n    if (!this.userName) {\n      this.toastr.warning('username required');\n    } else if (!this.firstName) {\n      this.toastr.warning('first name required');\n    } else if (!this.lastName) {\n      this.toastr.warning('last name required');\n    } else if (!this.mobileNumber) {\n      this.toastr.warning('mobile number required');\n    } else if (!this.email) {\n      this.toastr.warning('email id required');\n    } else if (!this.password) {\n      this.toastr.warning('password required');\n    } else if (this.mobileNumber.toString().length != 10) {\n      this.toastr.warning('Please enter 10 digit mobile number');\n    }\n    else {\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: this.mobileNumber,\n        email: this.email,\n        password: this.password,\n        userName: this.userName,\n        isAdmin: this.isAdmin,\n        countryName: this.selectedCountry,\n        countryCode: this.countryCode\n      }\n      this.isLoading = true;\n      this.appService.signUp(data)\n        .subscribe((apiResponse) => {\n          this.isLoading = false;\n          if (apiResponse.status === 200) {\n            this.toastr.success('Signup successful');\n            setTimeout(() => {\n              this.router.navigate(['']);\n            }, 1000);\n          } else {\n            this.toastr.error(apiResponse.message);\n          }\n        }, (err) => {\n          this.isLoading = false;\n          this.toastr.error('some error occured');\n        });\n    }\n  } \n}","module.exports = \"<!-- LOADER -->\\n<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<!-- APP HEADER -->\\n<app-header></app-header>\\n<div class=\\\"container\\\">\\n    <div *ngIf=\\\"isResetPassWord; then resetPassword else signupAndLogin\\\"></div>\\n    <!-- PASSWORD RESET -->\\n    <ng-template #resetPassword>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <app-password-reset [userId]=\\\"userId\\\"></app-password-reset>\\n            </div>\\n        </div>\\n    </ng-template>\\n    <ng-template #signupAndLogin>\\n        <div class=\\\"row\\\"> \\n            <div class=\\\"col-xs-12 col-sm-6 signup shadow-box-card\\\">\\n                <!-- SIGN UP -->\\n                <app-signup></app-signup>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 login\\\">\\n                <div *ngIf=\\\"isForgatePassword; then forgotPassword else login\\\"></div>\\n                <ng-template #forgotPassword>\\n                    <!-- FORGOT PASSWORD -->\\n                    <app-forgot-password></app-forgot-password>\\n                </ng-template>\\n                <ng-template #login>\\n                    <!-- LOGIN -->\\n                    <app-login></app-login>\\n                </ng-template>\\n               <div class=\\\"row\\\">\\n                   <div class=\\\"col-12 forgotPassword\\\">\\n                        <a (click)=\\\"isForgatePassword=!isForgatePassword\\\">{{isForgatePassword? 'Back to Login' : 'Forgot Password?'}}</a>\\n                   </div>\\n               </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n</div>\"","module.exports = \".container {\\n  margin-top: 20px;\\n  margin-bottom: 50px; }\\n\\n.forgotPassword {\\n  text-align: right;\\n  cursor: pointer;\\n  color: #005cbf;\\n  text-decoration: underline;\\n  font-weight: 500;\\n  margin-top: 15px; }\\n\\n@media only screen and (max-width: 575px) {\\n  .signup, .login {\\n    margin: 20px auto;\\n    width: 90%; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1tYW5hZ2VtZW50L0M6XFxVc2Vyc1xcREVMTFxcbmV3XFxNZWFuLXN0YWNrLWFwcDEtbWVldGluZy1wbGFubmVyLW1hc3RlclxcRnJvbnRFbmRfTWVldGluZ1BsYW5uZXIvc3JjXFxhcHBcXHVzZXItbWFuYWdlbWVudFxcdXNlci1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFBOztBQUV2QjtFQUNJLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0k7SUFDSSxpQkFBaUI7SUFDakIsVUFBVSxFQUFBLEVBQ2IiLCJmaWxlIjoic3JjL2FwcC91c2VyLW1hbmFnZW1lbnQvdXNlci1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG4uZm9yZ290UGFzc3dvcmR7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGNvbG9yOiAjMDA1Y2JmO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCl7XG4gICAgLnNpZ251cCwgLmxvZ2lue1xuICAgICAgICBtYXJnaW46IDIwcHggYXV0bztcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss']\n})\nexport class UserManagementComponent implements OnInit {\n  public isResetPassWord: boolean = false;\n  public isForgatePassword: boolean = false;\n  public currentUrl: string;\n  public userId: string;\n  public isLoading: boolean = true;\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    // if route path is reset password then redirect to reset password page\n    this.isLoading = false;\n    let paramsArray = this.router.url.split('/resetPassword/');\n    if (paramsArray.length == 2) {\n      this.userId = paramsArray[1];\n      this.isResetPassWord = true;\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { UserManagementComponent } from './user-management.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n      children: \n      [\n        {path: 'resetPassword', component:PasswordResetComponent},\n        {path: '', component:UserManagementComponent},\n      ]\n  }\n];\n\n@NgModule({\n  declarations: [LoginComponent, UserManagementComponent, SignupComponent, ForgotPasswordComponent, PasswordResetComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([ {path: '', component:UserManagementComponent}])\n  ]\n})\nexport class UserManagementModule { \n}\n"],"sourceRoot":""}